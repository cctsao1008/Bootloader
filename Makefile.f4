#
# PX4 bootloader build rules for STM32F4 targets.
#

ifeq ($(BOARD),FC)
PRODUCT		 = tmr$(TARGET)_bl
else ifeq ($(BOARD),DISCOVERY)
PRODUCT		 = stm32$(TARGET)_bl
else
PRODUCT		 = px4$(TARGET)_bl
endif

OPENOCD		?= openocd

JTAGCONFIG ?= interface/olimex-jtag-tiny.cfg
#JTAGCONFIG ?= interface/jtagkey-tiny.cfg

# 5 seconds / 5000 ms default delay
PX4_BOOTLOADER_DELAY	?= 5000

SRCS		 = $(COMMON_SRCS) main_f4.c

ifeq ($(INTERFACE),USB)
SRCS		+= cdcacm.c
endif

ifeq ($(INTERFACE),USART)
SRCS		+= usart.c
endif

ifeq ($(BOARD),FC)
SRCS		+= pca953x.c
endif

FLAGS		+= -mthumb -mcpu=cortex-m4 -mfloat-abi=hard -mfpu=fpv4-sp-d16 \
			-DSTM32F4 \
			-DBOOTLOADER_DELAY=$(PX4_BOOTLOADER_DELAY) \
			-DBOARD_$(BOARD) \
			-DINTERFACE_$(INTERFACE) \
			-DUSBDEVICESTRING="$(USBDEVICESTRING)" \
			-DUSBPRODUCTID="$(USBPRODUCTID)" \
			-Tstm32f4.ld \
			-L$(LIBOPENCM3)/lib/stm32/f4/ \
			-lopencm3_stm32f4 \

ifeq ($(BOARD),FC)
FLAGS		+= -DAPP_LOAD_ADDRESS=0x08010000 \
			-DAPP_SIZE_MAX=0xf0000
else
FLAGS		+= -DAPP_LOAD_ADDRESS=0x08004000 \
			-DAPP_SIZE_MAX=0xfc000
endif

ELF		 = $(PRODUCT).elf
BINARY		 = $(PRODUCT).bin

all:		$(ELF) $(BINARY)

$(ELF):		$(SRCS) $(MAKEFILE_LIST)
	$(CC) -o $@ $(SRCS) $(FLAGS)

$(BINARY):	$(ELF)
	$(OBJCOPY) -O binary $(ELF) $(BINARY)

#upload: all flash flash-bootloader
upload: all flash-bootloader

flash-bootloader:
	$(OPENOCD) --search ../px4_bootloader -f $(JTAGCONFIG) -f stm32f4x.cfg -c init -c "reset halt" -c "flash write_image erase $(BINARY)" -c "reset run" -c shutdown
